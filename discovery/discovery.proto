syntax = "proto3";
package discovery;

import "github.com/fuserobotics/quic-channel/identity/identity.proto";

// DiscoveryEvent represents an observation of a peer over a network.
message DiscoveryEvent {
  // PeerId is the PublicKeyHash array.
  identity.PeerIdentifier peer_id = 1;
  // Timestamp is when the event was observed.
  uint64 timestamp = 2;
  // Kind is the kind of discovery event.
  DiscoveryEventKind kind = 3;
  // Inter is the observed interface.
  uint32 inter = 4;
  // Extra info contains per-event-kind info.
  bytes extra_info = 5;
}

// DiscoveryEventKind are kinds of discovery events.
enum DiscoveryEventKind {
  // When a UDP broadcast is observed over LAN
  DISCOVER_OBSERVED_BROADCAST = 0;
  // When the internet connection with this peer is established.
  DISCOVER_INET_CONN_ESTABLISHED = 1;
}

// DiscoveryUDPPacket is a UDP discovery packet.
message DiscoveryUDPPacket {
  uint32 port = 1;
  identity.PeerIdentifier peer = 2;
}
