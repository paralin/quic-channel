syntax = "proto3";
package route;

import "github.com/fuserobotics/quic-channel/identity/identity.proto";
import "github.com/fuserobotics/quic-channel/signature/signature.proto";

// Route is a circuit probe route.
message Route {
  // Hops are the hop steps in the route.
  repeated signature.SignedMessage hop = 1;
  // Destination is the destination of the route.
  // Source can be inferred from the first hop.
  identity.PeerIdentifier destination = 2;

  // Hop is a hop in the probe route.
  message Hop {
    // Identity contains the identity of the peer.
    identity.Identity identity = 1;
    // BackwardInterface is the interface in the direction of the originator, used for session routing.
    uint32 backward_interface = 2;
    // ForwardInterface is the interface in the direction of the destination, used for verification.
    uint32 forward_interface = 3;
    // Timestamp is the time the route probe was processed.
    uint64 timestamp = 4;
    // SegmentHash is the hash of the route segments before this hop.
    signature.DataHash segment_hash = 5;
    // Next is the identifier for the next peer.
    identity.PeerIdentifier next = 6;
  }
}

// RouteEstablish is a agreement of a route by all peers.
message RouteEstablish {
  // Route is the encoded complete route.
  bytes route = 1;
  // Route signatures, in order of destination -> source.
  // The message field will be empty, should be filled from the ..route field.
  repeated signature.SignedMessage route_signatures = 2;
}
